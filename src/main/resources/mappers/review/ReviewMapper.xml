<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ReviewMapper Xml -->
<mapper namespace="com.project.fastpickup.admin.review.mappers.ReviewMapper">
  
    <!-- 댓글 -->
    <insert id="registReview">

        insert into tbl_review(sno, email, reviewTitle ,reviewContent) values(#{sno}, #{email}, #{reviewTitle}, #{reviewContent})

        <selectKey resultType="long" keyProperty="rno" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

    </insert>

    <!-- 순수 댓글은 gno = rno -->
    <update id="updateGno">
        update tbl_review set gno = #{rno} where rno = #{rno}
    </update>
    <!-- 댓글 -->


    <!-- 답글 -->
    <insert id ="registChildReview">
        insert into tbl_review(sno, email, reviewTitle ,reviewContent, ono, gno) values(#{sno}, #{email}, #{reviewTitle}, #{reviewContent},#{ono}, #{gno})
        
        <selectKey resultType="long" keyProperty="rno" order="AFTER">
                SELECT LAST_INSERT_ID()
         </selectKey>
    </insert>
    <!-- 답글 -->


    <!-- 리스트 -->
    <select id="getReviewList" resultType="com.project.fastpickup.admin.review.dto.ReviewListDTO">
    
        select r.rno, r.sno, r.gno, r.email, r.reviewTitle, r.reviewDate, 
            r.reviewUpdateDate,s.storeName, p.productName ,concat(i.uuid,'_',i.fileName) as fileName
        from tbl_review r left outer join tbl_review_img i on r.rno = i.rno
		        left outer join tbl_store s on r.sno = s.sno
		        left outer join tbl_order o on r.ono = o.ono
		        left outer join tbl_product p on o.pno = p.pno
        where (i.ord = 0 or i.ord is null) and r.rno = r.gno and r.isDeleted = false
        order by r.rno desc 
        limit #{skip}, #{size}

    </select>

    <select id="reviewListCount" resultType="long">
        select count(*) from 
        (select rno from tbl_review
        where rno > 0 and rno = gno limit #{countEnd}) review
    </select>
    <!-- 리스트 -->


    <!-- 
        리뷰 상세보기
    -->
    <resultMap id="reviewMap" type="com.project.fastpickup.admin.review.dto.ReviewReadDTO">
        <id property="rno" column="rno"/>
        <result property="gno" column="gno"/>
        <result property="email" column="email"/>
        <result property="reviewTitle" column="reviewTitle"/>
        <result property="reviewContent" column="reviewContent"/>
        <result property="reviewDate" column="reviewDate"/>
        <result property="storeName" column="storeName"/>
        <result property="productName" column="productName"/>
        <result property="isDeleted" column="isDeleted"/>
        <collection property="fileNames" resultMap="reviewFileMap"/>
    </resultMap>

    <resultMap type="string" id="reviewFileMap">
        <result column="fileNames"/>
    </resultMap>

    <select id="reviewSelectOne" resultMap="reviewMap">
    
        select r.rno, r.gno, r.email, r.reviewTitle, r.reviewContent , r.reviewDate, 
            s.storeName, p.productName, r.isDeleted, concat(i.uuid,'_',i.fileName) as fileNames
        from tbl_review r left outer join tbl_review_img i on r.rno = i.rno
		        left outer join tbl_store s on r.sno = s.sno
		        left outer join tbl_order o on r.ono = o.ono
		        left outer join tbl_product p on o.pno = p.pno
        where r.rno = r.gno and r.isDeleted = false
        order by r.rno desc 

    </select>
    <!-- 상세보기 -->

</mapper>